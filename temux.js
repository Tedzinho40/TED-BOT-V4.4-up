#!/usr/bin/env node

// ===============================
// üõ°Ô∏è TEMUX - VERS√ÉO ROBUSTA
// ===============================

process.removeAllListeners('warning');

console.log('üõ°Ô∏è Temux Robusto - Iniciando...');

// Fun√ß√£o para carregar ESM e converter para CommonJS
async function loadAndConvertESM() {
    try {
        console.log('üì¶ Convertendo Baileys ESM ‚Üí CommonJS...');
        
        const baileysESM = await import('@whiskeysockets/baileys');
        
        // Cria um objeto compat√≠vel com CommonJS
        const baileysCommonJS = {
            // Propriedades que o connect.js usa
            default: baileysESM.default,
            DisconnectReason: baileysESM.DisconnectReason,
            useMultiFileAuthState: baileysESM.useMultiFileAuthState,
            fetchLatestBaileysVersion: baileysESM.fetchLatestBaileysVersion,
            
            // Para garantir compatibilidade
            ...baileysESM
        };
        
        console.log('‚úÖ Baileys convertido com sucesso');
        return baileysCommonJS;
        
    } catch (error) {
        console.error('‚ùå Falha na convers√£o:', error);
        throw error;
    }
}

// INICIALIZA√á√ÉO ROBUSTA
async function initialize() {
    try {
        // 1. Converte Baileys
        const baileysCommonJS = await loadAndConvertESM();
        
        // 2. Injeta no sistema de m√≥dulos
        require.cache[require.resolve('@whiskeysockets/baileys')] = {
            exports: baileysCommonJS
        };
        
        // 3. Inicia aplica√ß√£o
        console.log('üöÄ Iniciando connect.js...');
        require('./connect.js');
        
        console.log('üéâ Sistema operacional!');
        
    } catch (error) {
        console.error('üí• Falha na inicializa√ß√£o:', error);
        process.exit(1);
    }
}

// EXECUTA
initialize();